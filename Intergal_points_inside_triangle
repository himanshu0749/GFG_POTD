class Solution {
    public static long boundaryPoints(long[] p, long[] q) {
        return gcd(Math.abs(p[0] - q[0]), Math.abs(p[1] - q[1])) + 1;
    }
    public static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
    public static long InternalCount(long[] p, long[] q, long[] r) {
        long area = Math.abs(p[0]*(q[1]-r[1])+ q[0]*(r[1] - p[1]) + r[0]*(p[1] - q[1]));
        long boundaryPQ = boundaryPoints(p, q);
        long boundaryQR = boundaryPoints(q, r);
        long boundaryRP = boundaryPoints(r, p);

        long B = boundaryPQ + boundaryQR + boundaryRP - 3;

        return (area - B+2)/2;
    }
};
