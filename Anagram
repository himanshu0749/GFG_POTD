

class Solution
{    
    //Function is to check whether two strings are anagram of each other or not.
    public static boolean isAnagram(String a,String b)
    {
        
        // Your code here
         if (a.length() != b.length()) {
            return false;
        }
        int[] countA = new int[26];
        int[] countB = new int[26];
        for (int i = 0; i < a.length(); i++) {
            countA[a.charAt(i) - 'a']++;
            countB[b.charAt(i) - 'a']++;
        }
        
        // Compare the frequency arrays
        for (int i = 0; i < 26; i++) {
            if (countA[i] != countB[i]) {
                return false;
            }
        }
        
        // If all frequencies match, the strings are anagrams
        return true;
        
    }
}




-------------------------------------------------------------------------------------------------------------



2nd method






class Solution
{    
    //Function is to check whether two strings are anagram of each other or not.
    public static boolean isAnagram(String a,String b)
    {
        
        // Your code here
         if (a.length() != b.length()) {
            return false;
        }
        
        // Frequency arrays for characters in 'a' and 'b'
        int[] countA = new int[26];
        int[] countB = new int[26];
        
        // Populate the frequency arrays
        for (int i = 0; i < a.length(); i++) {
            countA[a.charAt(i) - 'a']++;
            countB[b.charAt(i) - 'a']++;
        }
        
        // Compare the frequency arrays
        for (int i = 0; i < 26; i++) {
            if (countA[i] != countB[i]) {
                return false;
            }
        }
        
        // If all frequencies match, the strings are anagrams
        return true;
        
    }
}
